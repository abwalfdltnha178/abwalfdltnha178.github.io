name: تولید و انتشار search.json

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # این خط مهم است!

jobs:
  generate-search-json:
    runs-on: ubuntu-latest

    steps:
      - name: دریافت مخزن
        uses: actions/checkout@v3

      - name: تنظیم Ruby و Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: نصب وابستگی‌ها
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          gem install jekyll nokogiri kramdown

      - name: تبدیل Markdown به JSON
        run: |
          mkdir -p _site
          ruby <<EOF
          require 'json'
          require 'yaml'
          require 'kramdown'
          require 'nokogiri'

          # خواندن فایل‌های Markdown از _posts
          markdown_files = Dir.glob('_posts/**/*.md')

          data = markdown_files.map do |file|
            content = File.read(file)

            # استخراج Front Matter
            front_matter_content = content.match(/---(.*?)---/m)[1]
            front_matter = YAML.safe_load(front_matter_content, permitted_classes: [Time])

            # تبدیل Markdown به HTML
            html_content = Kramdown::Document.new(content.split('---', 3).last.strip).to_html

            # حذف تگ‌های HTML برای جستجو
            plain_text = Nokogiri::HTML(html_content).text

            {
              id: File.basename(file, '.md'),
              title: front_matter['title'],
              date: front_matter['date']&.to_s,
              categories: front_matter['categories'],
              url: "/#{File.basename(file, '.md').gsub('.md', '.html')}",
              content: plain_text[0..500] # خلاصه کردن محتوا برای جستجو
            }
          end

          # ذخیره در فایل JSON
          File.write('_site/assets/search.json', JSON.pretty_generate(data))
          EOF

      - name: انتشار search.json در GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site
          clean: false
          token: ${{ secrets.GITHUB_TOKEN }}
