name: Automated Code Correction

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code_correction:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get All Files
        id: all-files
        run: |
          FILES=$(find . -type f)
          echo "::set-output name=files::$FILES"

      - name: Loop Through Files
        run: |
          ALL_FILES="${{ steps.all-files.outputs.files }}"
          IFS=$'\n' read -r -a FILES <<< "$ALL_FILES"
          for file in "${FILES[@]}"; do
              echo "Processing file: $file"

              # مرحله 1: ارسال فایل به API برای بررسی خطا
              API_URL="YOUR_API_URL/check_file" # جایگزین کنید
              
              # خواندن محتوای فایل
              FILE_CONTENT=$(cat "$file")

              RESPONSE=$(curl -s -X POST \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
                -d "{ \"filename\": \"$file\", \"content\": \"$(echo "$FILE_CONTENT" | jq -sRc .)\" }" \
                "$API_URL"
              )
              
              # بررسی وجود خطا
              HAS_ERRORS=$(echo "$RESPONSE" | jq '.has_errors')
              if [[ "$HAS_ERRORS" == "true" ]]; then
                  echo "Errors found in $file"
                  
                  # دریافت لاگ خطا
                  ERROR_LOG=$(echo "$RESPONSE" | jq '.error_log')
                  echo "Error Log: $ERROR_LOG"
                  
                  # مرحله 2: دریافت نسخه اصلاح شده فایل
                  FIX_API_URL="YOUR_API_URL/fix_file" # جایگزین کنید
                  FIXED_RESPONSE=$(curl -s -X POST \
                      -H "Content-Type: application/json" \
                      -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
                      -d "{ \"filename\": \"$file\", \"content\": \"$(echo "$FILE_CONTENT" | jq -sRc .)\" }" \
                      "$FIX_API_URL"
                  )
                  FIXED_CONTENT=$(echo "$FIXED_RESPONSE" | jq -r '.fixed_content')

                  # مرحله 3: جایگزینی محتوای فایل با نسخه اصلاح شده
                  echo "$FIXED_CONTENT" > "$file"
                  
                   # مرحله 4: کامیت و پوش کردن تغییرات
                  git config --global user.email "github-actions@github.com"
                  git config --global user.name "GitHub Actions"
                  git add "$file"
                  git commit -m "Fix: Auto-correct errors in $file"
                  git push origin HEAD:"${GITHUB_REF#refs/heads/}"
                  
                   # مرحله 5: بررسی مجدد فایل
                  CHECK_AGAIN_RESPONSE=$(curl -s -X POST \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
                -d "{ \"filename\": \"$file\", \"content\": \"$(echo "$FIXED_CONTENT" | jq -sRc .)\" }" \
                "$API_URL"
              )
                  HAS_ERRORS_AGAIN=$(echo "$CHECK_AGAIN_RESPONSE" | jq '.has_errors')
                   if [[ "$HAS_ERRORS_AGAIN" == "true" ]]; then
                    echo "The file $file still has errors, please check it manually."
                    ERROR_LOG_AGAIN=$(echo "$CHECK_AGAIN_RESPONSE" | jq '.error_log')
                     echo "New Error Log: $ERROR_LOG_AGAIN"
                   else
                      echo "The file $file successfully fixed"
                   fi
              else
                  echo "No errors found in $file"
              fi
          done
